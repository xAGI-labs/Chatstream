# Use an official lightweight Node.js image
FROM node:18-alpine AS builder

# Set environment variables inside Dockerfile
ENV CLERK_PUBLISHABLE_KEY="your-clerk-publishable-key"
ENV OPENAI_API_KEY="your-openai-api-key"

# Set working directory inside the container
WORKDIR /app

# Install dependencies efficiently
COPY package.json package-lock.json* ./
RUN npm install --frozen-lockfile

# Copy the entire project
COPY . .

# Generate Prisma Client if using Prisma
RUN npx prisma generate

# Build the Next.js application
RUN npm run build

# Use a smaller base image for the production container
FROM node:18-alpine AS runner

# Set environment variables again for runtime
ENV CLERK_PUBLISHABLE_KEY="pk_test_dGhhbmtmdWwtdXJjaGluLTM5LmNsZXJrLmFjY291bnRzLmRldiQ"
ENV OPENAI_API_KEY="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"
ENV NODE_ENV=production

# Set working directory
WORKDIR /app

# Copy built files from the previous stage
COPY --from=builder /app ./

# Expose the port the app runs on
EXPOSE 3000

# Start the application
CMD ["npm", "start"]
